def COLOR_MAP = ['SUCCESS': 'good', 'FAILURE': 'danger', 'UNSTABLE': 'warning', 'ABORTED': 'danger']

pipeline {
    agent {
        label 'master'
    }
    stages {
        stage('Checkout Saleor-Platform') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: true, recursiveSubmodules: true, reference: '', threads: 2, trackingSubmodules: false]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'valcome-analytics-git', url: 'https://github.com/valcome-analytics/saleor-dashboard']]])
            }
        }
        stage('Build Dashboard Image') {
            environment {
                AWS_ACCESS_KEY_ID = credentials('AWS_DOCKER_REGISTRY_ACCESS_KEY_ID')
                AWS_SECRET_ACCESS_KEY = credentials('AWS_DOCKER_REGISTRY_SECRET_KEY')
                REGISTRY = '487554623251.dkr.ecr.eu-central-1.amazonaws.com'
                REPOSITORY = 'valcome/saleor-dashboard'
            }
            steps {
                /*
                sh 'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"'
                sh 'unzip awscliv2.zip -y'
                sh './aws/install'
                */
                sh 'aws --version'
                sh 'aws configure set aws_access_key_id "${AWS_ACCESS_KEY_ID}"'
                sh 'aws configure set aws_secret_access_key "${AWS_SECRET_ACCESS_KEY}"'
                sh 'aws configure set default.region eu-central-1'
                sh 'aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${REGISTRY}'
                sh 'docker build -f Dockerfile --build-arg API_URI=${API_URI} -t ${REGISTRY}/${REPOSITORY}:${VERSION} .'
                sh 'docker push ${REGISTRY}/${REPOSITORY}:${VERSION}'
            }
        }
    }
}